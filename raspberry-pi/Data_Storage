#type: ignore
import adafruit_mpu6050
import busio
import board
import time
import digitalio


sda_pin = board.GP14 # defining serial data pin
scl_pin = board.GP15 # defining serial clock pin
i2c = busio.I2C(scl_pin, sda_pin) # allowing the sda and scl pins to communicate using one channel
mpu = adafruit_mpu6050.MPU6050(i2c) # initializes the sensor

led = digitalio.DigitalInOut(board.GP0)
led.direction = digitalio.Direction.OUTPUT

mpu = adafruit_mpu6050.MPU6050(i2c) # initializes the sensor

with open("/data.csv", "a") as datalog:
    while True:
        XAcceleration = mpu.acceleration[0] ## States which value of the Tuple corresponds to which accelerometer value 
        YAcceleration = mpu.acceleration[1] ## For Y
        ZAcceleration = mpu.acceleration[2] ## For Z
        
        time.sleep(.1) ## Adds a slight pause after each cycle 

        if ZAcceleration < 0:
            Led.value = True ## Turns on the Red LED
        else:
            Led.value = False ## Turns off the Red LED when the accelerometer is not tilted to exactly 90 degrees
           
    
        datalog.write(f"{time_elapsed},{Xaccel},{Yaccel},{Zaccel},{Tilted}\n") #Put the data into a chart

        Led.value = True # LED cycle
        time.sleep(.5)
        Led.value = False

        datalog.flush() # Save the data
        time.sleep(.1)